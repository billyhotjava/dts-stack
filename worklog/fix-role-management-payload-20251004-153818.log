[Summary]
- Checked role management module payloads (create/update/delete, menu binding, assignments) and backend handling.
- Found mismatch: update/delete payload sent `name` with `ROLE_` prefix; backend expects role.name without prefix (adds prefix only for menu visibility). This causes custom-role updates to be skipped and Keycloak sync to create roles with an unintended prefix.

[Fixes]
- Frontend: send role `name` without `ROLE_` on update/delete; keep menu `allowedRoles` with `ROLE_` prefix.
  - File: source/dts-admin-webapp/src/admin/views/role-management.tsx (added toRoleName, use for payloadJson.name and resourceId)
- Backend: normalize incoming role names by stripping `ROLE_` in create/update/custom-role paths for robustness.
  - File: source/dts-admin/src/main/java/com/yuzhi/dts/admin/web/rest/AdminApiResource.java (stripRolePrefix, applied in createCustomRole, applyRoleChange, applyCustomRoleChange)
- Backend: log role-change payload summary for debugging.

[Notes]
- Menu binding remains with `ROLE_` prefix as expected by visibility checks.
- Delete role still not implemented on server (applyRoleChange supports UPDATE only). UI submit will create CR but backend will reject apply; consider disabling delete or adding server support.

[Verify]
- Edit a role (scope/description), submit, approve. Expect logs:
  FE payload(role-change): action=UPDATE, rawName=ROLE_XXX or XXX, normalizedName=XXX
  ROLE_UPDATE_EXECUTE SUCCESS and Keycloak sync.
- Menu visibility diffs continue to send allowedRoles with ROLE_XXX.

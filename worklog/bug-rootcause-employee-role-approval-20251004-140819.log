Title: 员工/角色修改审批后刷新未生效 - 根因分析
When: $(date -Iseconds)

现象
- 员工信息或角色修改提交审批后，authadmin 批准显示成功；页面刷新后，列表/详情仍显示旧值。

根因（两部分）
1) 读取侧使用普通用户令牌导致回退到内存缓存，显示为旧数据
- 后端列表与查询使用当前登录用户的 access token 调用 Keycloak Admin REST：
  - source/dts-admin/src/main/java/com/yuzhi/dts/admin/web/rest/KeycloakApiResource.java:75 开始的方法 listUsers 使用 currentAccessToken()
  - 若令牌无 Admin REST 权限（authadmin 通常没有），HTTP 401/403 导致客户端返回空列表；随后代码回退到 InMemoryStores：
    - KeycloakApiResource.java:79-86 调用 stores.listUsers(...)
  - InMemoryStores 只是启动时的演示数据/缓存，并不会被审批应用时更新，因此刷新后仍显示旧值。

2) 角色变更写入路径使用错误的 Keycloak API，实际未生效
- 审批通过后对角色的处理走 updateUser，把 realmRoles 放到用户表示里：
  - source/dts-admin/src/main/java/com/yuzhi/dts/admin/service/user/AdminUserService.java:1071-1087 applyGrantRoles
  - source/dts-admin/src/main/java/com/yuzhi/dts/admin/service/keycloak/KeycloakAdminRestClient.java:100-140 updateUser -> PUT /admin/realms/{realm}/users/{id}
- Keycloak 官方并不在用户 PUT 接口处理角色映射；角色应通过 /users/{id}/role-mappings/realm 端点单独增删。因此角色授予/撤销实际没有写入 Keycloak。

为什么审批看上去“成功”
- 审批执行使用 Service Account（客户端凭据）调用 Keycloak：
  - AdminUserService.approve() 会通过 resolveManagementToken() 获取管理令牌并 applyApproval；若非致命错误，审批状态会置为 APPLIED。
- 读取时因为使用普通用户令牌失败，回退到旧缓存，因此看起来“没有生效”。

结论
- 主要可见症由“读取使用普通令牌导致回退缓存”引起；
- 角色修改属于“写入实现错误”（未走 role-mappings），即便读取修好也不会看到角色变更。

建议（修复方向概要）
- 读取：/keycloak/users* 与 /keycloak/users/{id} 在服务端使用 Service Account 读取（或统一从快照库 AdminKeycloakUser 读取），避免回退缓存。
- 写入：grant/revoke 角色改用 Keycloak /users/{id}/role-mappings/realm 增删；updateUser 仅更新基本字段与 attributes。
- 审批后：更新 DB 快照后，同时刷新 InMemoryStores 对应用户，避免短期内看到旧缓存。

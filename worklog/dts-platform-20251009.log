===== dts-platform 2025-10-09 01:15:00 (dts-platform-20251009-011500.log) =====
[2025-10-09 01:15] 平台端剥离“用户/角色/部门管理”能力，并清理安全规则/文档/特性开关

[范围]
- 平台前端：个人资料页移除远端 Keycloak 用户查询；删除平台内 Keycloak 管理 API 封装；清理 README 中后台管理相关表述。
- 平台后端：移除 `/api/admin/**` 的安全匹配（平台不再提供管理接口）。
- Compose 与应用配置：删除已无用的特性开关（平台侧 Keycloak/Admin Demo）。
- Worklog 口径：更新权限矩阵，标注“平台不再提供 `/api/admin/**`”。

[变更明细]
- 前端（platform-webapp）
  - 删除远端查询，仅使用本地登录态渲染个人资料：
    - 修改：`source/dts-platform-webapp/src/pages/settings/profile/index.tsx`
      • 移除 `KeycloakUserService` 依赖与搜索逻辑；`detail` 固定为 `null`；姓名/邮箱/角色来源于本地 store。
    - 删除：`source/dts-platform-webapp/src/api/services/keycloakService.ts`（整文件移除；原“用户/角色/组”管理 API 不再驻留平台）。
  - 文档收敛：
    - 修改：`source/dts-platform-webapp/README.zh-CN.md`（去除“集成用户/角色管理”等后台管理描述，并注明该能力已迁移到 admin）。
    - 删除：`source/dts-platform-webapp/KEYCLOAK_FEATURES.md`（平台不再提供相关 UI/接口）。
  - 下拉来源统一（补充）：
    - 部门：沿用并确认从 admin 获取（平台友好端点 `GET ${ADMIN_BASE}/platform/orgs`），文件：`src/api/services/deptService.ts`。
    - 角色：新增平台友好角色服务，统一从 admin 取数：
      • 新增：`source/dts-platform-webapp/src/api/services/roleService.ts`（`GET ${ADMIN_BASE}/keycloak/platform/roles`）。
    - 登录用户信息：沿用平台登录从 admin 返回的 `user` 载荷（经 `AdminAuthClient` 获取），Profile 仅用本地登录态渲染（不再直连 Keycloak）。
  - Bugfix：数据资产目录部门下拉为空
    - 原因：平台调用的 `{ADMIN_BASE}/platform/orgs` 与 admin 端实际暴露路径不一致（部分版本为 `/admin/platform/orgs`），导致空结果。
    - 修复：`deptService` 增加向后兼容回退顺序：`/platform/orgs` → `/admin/platform/orgs` → `/orgs`；自动解包 envelope。
      • 修改：`source/dts-platform-webapp/src/api/services/deptService.ts`
    - 受影响页面：
      • 列表筛选：`source/dts-platform-webapp/src/pages/catalog/DatasetsPage.tsx`
      • 详情编辑：`source/dts-platform-webapp/src/pages/catalog/DatasetDetailPage.tsx`
  - 统一“角色/组织”主体选择来源（授权策略页面）
    - 改造 `iamPolicyService.searchSubjects`：
      • 当 type=org 时，改为从 admin 获取部门树（`deptService.listDepartments`），并映射为 `{id,name}`；
      • 当 type=role 时，优先从 admin 获取 realm 角色（`roleService.listRealmRoles`），失败时回退平台接口；
      • 文件：`source/dts-platform-webapp/src/api/services/iamPolicyService.ts`

- 后端（platform）
  - 安全规则：移除 `/api/admin/**` 授权匹配，避免误导（平台仅保留业务 API 与 `/api/menu**`、`/api/keycloak/**` 相关放行）：
    - 修改：`source/dts-platform/src/main/java/com/yuzhi/dts/platform/config/SecurityConfiguration.java`

- 配置与 Compose
  - Compose 环境变量：移除以下特性开关（dev/app 两份 compose）：
    - `DTS_FEATURE_PLATFORM_KEYCLOAK_ADMIN`
    - `DTS_FEATURE_PLATFORM_ADMIN_DEMO`
    - 修改：`docker-compose.dev.yml`、`docker-compose-app.yml`
  - 应用配置：删除对应 flags，仅保留本地化开关 `kc-localization`：
    - 修改：`source/dts-platform/src/main/resources/config/application.yml`

- Worklog 口径
  - 修改：`worklog/permissions-matrix.md` → 接口权限章节明确“平台不再提供 `/api/admin/**` 管理接口；其余 `/api/**` 需认证”。

[验证]
1) 前端 Profile：打开平台“个人资料”，Network 不应再发起 `/api/keycloak/users/search`；页面信息来自本地登录态；角色徽标与邮箱展示正常。
2) 后端安全：访问 `/api/admin/**` → 未匹配（404/无此路由）；`/api/menu**` 与 `/api/keycloak/auth/**` 放行口径不变，其他 `/api/**` 需认证。
3) Compose：`docker compose config` 检查 dts-platform 服务环境变量，确认两个旧 flag 已不存在。
4) 应用配置：`application.yml` 下 `dts.platform.features` 仅保留 `kc-localization`；功能仍可用（本地化接口可访问）。

[影响]
- 平台端不再暴露任何用户/角色/部门管理能力与文档；相关能力完全在 admin 模块承载。
- 依赖于旧 Keycloak 管理 API 的平台端调用已全部移除；跨域/鉴权复杂度降低。

===== dts-platform 2025-10-09 02:40:00 (dts-platform-20251009-024000.log) =====
[2025-10-09 02:40] Bugfix：登录后菜单未按角色过滤（xiezm 看到全部菜单）

[原因]
- 平台后端安全规则将 `/api/menu/**` 设为 `permitAll`，匿名访问时 SecurityContext 无角色信息。
- `PortalMenuService` 读取到空角色后调用 dts-admin 的公开菜单接口（不带受众），返回了完整菜单树。

[修复]
- 将 `/api/menu` 与 `/api/menu/**` 调整为需认证（落入 `/api/**` -> authenticated 规则）。
  • 修改：source/dts-platform/src/main/java/com/yuzhi/dts/platform/config/SecurityConfiguration.java

[验证]
- 以用户 `xiezm` 登录平台，观察：
  • 前端登录成功后由 `menuService.getMenuTree()` 发起请求，自动携带 `Authorization`。
  • 后端 `PortalMenuService` 能获取到角色集合（已做 ROLE_ 归一化与 ROLE_USER 剥离），转发给 admin 过滤菜单。
  • 左侧栏与顶层导航仅显示与 `xiezm` 角色绑定的菜单，历史“全部可见”问题消失。
- 回归：未登录访问 `/api/menu**` 返回 401；登录后正常返回受众过滤后的菜单树。

[2025-10-09 03:05] Bugfix：数据资产目录 owner_dept 下拉无数据

[原因]
- 前端 deptService 第一次调用 {ADMIN_BASE}/platform/orgs 404 抛错后，外层 try/catch 直接返回 []，未继续尝试兼容路径。
- dts-admin 实际可用端点为 /api/admin/platform/orgs；另有网关拓扑下的 /api/platform/orgs（通过 /admin 前缀转发后 strip）。

[修复]
- 调整平台前端 `deptService.listDepartments` 的回退策略：
  • 按序尝试 `/admin/platform/orgs` → `/platform/orgs` → `/orgs`；
  • 单次失败（404/401/网络错误）不再终止，继续下一候选；仅当全部失败时返回空。
  • 兼容 Response 包裹与直返两种返回格式。
  • 文件：source/dts-platform-webapp/src/api/services/deptService.ts

[验证]
- 访问平台 UI：#/catalog/assets，打开“创建数据集”对话框，作用域选 DEPT，所属部门下拉显示组织树扁平化后的列表。
- 切换筛选区“部门（owner_dept）”，可正常展开与筛选；保存后列表按部门过滤显示。
[2025-10-09 03:18] Dev CORS：允许平台前端本地端口调用 admin 接口

[问题]
- 浏览器从 http://localhost:18012 调用 https://admin.dts.local/api/admin/platform/orgs 被 CORS 拒绝（admin 未返回 Access-Control-Allow-Origin）。

[修复]
- 在 dev compose 为 dts-admin 增加允许来源：http://localhost:18012、http://127.0.0.1:18012。
  • 修改：docker-compose.dev.yml → dts-admin → JHIPSTER_CORS_ALLOWED_ORIGINS。

[验证]
- `./dev-up.sh --mode local` 后，刷新平台页面 #/catalog/assets，网络请求：
  • 200 GET https://admin.dts.local/api/admin/platform/orgs（或等价路径），下拉成功渲染。
[2025-10-09 03:32] Dev 规避 CORS：同源代理 /admin/api

[改动]
- 平台前端 dev 环境将 `VITE_ADMIN_API_BASE_URL` 设为 `/admin/api`（同源路径）。
- 在 Vite dev server 增加代理：`/admin/api` -> `https://${HOST_ADMIN_UI}/api`，避免浏览器跨域检查。
  • 修改：docker-compose.dev.yml（新增 VITE_ADMIN_PROXY_TARGET）
  • 修改：source/dts-platform-webapp/vite.config.ts（新增 proxy '/admin/api'）

[使用]
- 运行 `./dev-stop.sh --mode local && ./dev-up.sh --mode local`，等待 dts-platform-webapp dev server 启动。
- 刷新 http://localhost:18012/#/catalog/assets，部门下拉正常加载且无 CORS 报错。
[2025-10-09 03:58] Admin 安全放行 + Dev 直连代理

[问题]
- 平台前端通过 /admin/api 代理到 admin 的 `/api/platform/orgs` 时返回 404/500；admin 实际端点在 `/api/admin/platform/orgs`。
- Admin 安全配置未放行 `/api/admin/platform/**`，导致非三员访问被拒。

[修复]
- Admin Security：新增 `permitAll` 例外，允许 `/api/admin/platform/**`。
  • 修改：source/dts-admin/src/main/java/com/yuzhi/dts/admin/config/SecurityConfiguration.java
- Dev 代理：Vite 直接转发到 `http://dts-admin:8081/api`，避免 TLS/Traefik 干扰。
  • 修改：docker-compose.dev.yml（VITE_ADMIN_PROXY_TARGET 改为容器直连）
- 部门服务：回退顺序以 `/admin/platform/orgs` 为先，其次 `/platform/orgs`、`/orgs`。
  • 修改：source/dts-platform-webapp/src/api/services/deptService.ts

[验证]
- 重启 dev：`./dev-stop.sh --mode local && ./dev-up.sh --mode local`（确保 dts-admin 重新加载安全配置）。
- 打开 #/catalog/assets，网络应显示 200：`GET http://localhost:18012/admin/api/admin/platform/orgs`（被 Vite 重写为 admin 的 `/api/admin/platform/orgs`）。

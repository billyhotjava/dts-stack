## Local dev overlay: run services from source via bind mounts and live reload

services:

  # Java backend: dts-admin (Spring Boot)
  dts-admin:
    image: ${IMAGE_MAVEN}
    working_dir: /workspace-src/dts-admin
    depends_on:
      dts-pg:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${DTS_PROFILE:-dev}
      SPRING_DATASOURCE_URL: jdbc:postgresql://dts-pg:5432/${PG_DB_DTADMIN:-dts_admin}
      SPRING_DATASOURCE_USERNAME: ${PG_USER_DTADMIN:-dts_admin}
      SPRING_DATASOURCE_PASSWORD: ${PG_PWD_DTADMIN:-dts_admin}
      SPRING_LIQUIBASE_ENABLED: ${SPRING_LIQUIBASE_ENABLED:-true}
      EUREKA_CLIENT_ENABLED: ${EUREKA_CLIENT_ENABLED:-false}
      SPRING_CLOUD_CONFIG_ENABLED: ${SPRING_CLOUD_CONFIG_ENABLED:-false}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "${OAUTH2_CLIENT_ID:-dts-admin}"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "${OAUTH2_CLIENT_SECRET:-Devops123@}"
      JHIPSTER_CORS_ALLOWED_ORIGINS: "http://localhost:3001,http://127.0.0.1:3001,http://localhost:5173,http://127.0.0.1:5173"
      JHIPSTER_CORS_ALLOWED_METHODS: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      JHIPSTER_CORS_ALLOWED_HEADERS: "*"
      JHIPSTER_CORS_ALLOW_CREDENTIALS: "true"
      SPRINGDOC_API_DOCS_ENABLED: "true"
      SPRINGDOC_SWAGGER_UI_ENABLED: "true"
    command:
      - bash
      - -lc
      - |
        # 1) precompile with module graph (includes dts-common)
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true -am -pl :dts-admin package || true
        # 2) run with devtools; restarts on classpath changes
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true -am -pl :dts-admin spring-boot:run \
          -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Djavax.net.ssl.trustStore=/etc/dts/truststore.jks -Djavax.net.ssl.trustStorePassword=${TRUSTSTORE_PASSWORD:-changeit}"
    ports:
      - "18081:8081"
      - "5005:5005"
    volumes:
      - ../dts-source:/workspace-src
      - maven-cache:/root/.m2
      - ./services/certs/truststore.jks:/etc/dts/truststore.jks:ro
    extra_hosts:
      - "${HOST_SSO}:host-gateway"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:8081/v3/api-docs >/dev/null || wget -qO- http://127.0.0.1:8081/v3/api-docs >/dev/null"]
      interval: 10s
      timeout: 10s
      retries: 60
      start_period: 120s
    networks:
      - dts-core

  # Java backend: dts-platform (Spring Boot)
  dts-platform:
    image: ${IMAGE_MAVEN}
    working_dir: /workspace-src/dts-platform
    depends_on:
      dts-pg:
        condition: service_healthy
      dts-trino:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: ${DTS_PROFILE:-dev}
      SPRING_DATASOURCE_URL: jdbc:postgresql://dts-pg:5432/${PG_DB_DTPS:-dts_platform}
      SPRING_DATASOURCE_USERNAME: ${PG_USER_DTPS:-dts_platform}
      SPRING_DATASOURCE_PASSWORD: ${PG_PWD_DTPS:-dts_platform}
      SPRING_LIQUIBASE_ENABLED: ${SPRING_LIQUIBASE_ENABLED_PLATFORM:-true}
      EUREKA_CLIENT_ENABLED: ${EUREKA_CLIENT_ENABLED:-false}
      SPRING_CLOUD_CONFIG_ENABLED: ${SPRING_CLOUD_CONFIG_ENABLED:-false}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      JHIPSTER_CORS_ALLOWED_ORIGINS: "http://localhost:3001,http://127.0.0.1:3001,http://localhost:5173,http://127.0.0.1:5173"
      JHIPSTER_CORS_ALLOWED_METHODS: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      JHIPSTER_CORS_ALLOWED_HEADERS: "*"
      JHIPSTER_CORS_ALLOW_CREDENTIALS: "true"
      SPRINGDOC_API_DOCS_ENABLED: "true"
      SPRINGDOC_SWAGGER_UI_ENABLED: "true"
    command:
      - bash
      - -lc
      - |
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true -am -pl :dts-platform package || true
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true -am -pl :dts-platform spring-boot:run \
          -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Djavax.net.ssl.trustStore=/etc/dts/truststore.jks -Djavax.net.ssl.trustStorePassword=${TRUSTSTORE_PASSWORD:-changeit}"
    ports:
      - "18082:8081"
      - "5006:5006"
    volumes:
      - ../dts-source:/workspace-src
      - maven-cache:/root/.m2
      - ./services/certs/truststore.jks:/etc/dts/truststore.jks:ro
    extra_hosts:
      - "${HOST_SSO}:host-gateway"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:8081/v3/api-docs >/dev/null || wget -qO- http://127.0.0.1:8081/v3/api-docs >/dev/null"]
      interval: 10s
      timeout: 10s
      retries: 60
      start_period: 120s
    networks:
      - dts-core

  # Java backend: dts-public-api (Spring Boot)
  dts-public-api:
    image: ${IMAGE_MAVEN}
    working_dir: /workspace-src/dts-public-api
    depends_on:
      dts-admin:
        condition: service_started
      dts-platform:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: ${DTS_PROFILE:-dev}
      PLATFORM_PUBLIC_DOCS_URL: ${PLATFORM_PUBLIC_DOCS_URL:-http://dts-platform:8081/v3/api-docs}
      ADMIN_PUBLIC_DOCS_URL: ${ADMIN_PUBLIC_DOCS_URL:-http://dts-admin:8081/v3/api-docs}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      JHIPSTER_CORS_ALLOWED_ORIGINS: "http://localhost:3001,http://127.0.0.1:3001,http://localhost:5173,http://127.0.0.1:5173"
      JHIPSTER_CORS_ALLOWED_METHODS: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      JHIPSTER_CORS_ALLOWED_HEADERS: "*"
      JHIPSTER_CORS_ALLOW_CREDENTIALS: "true"
      SPRINGDOC_API_DOCS_ENABLED: "true"
      SPRINGDOC_SWAGGER_UI_ENABLED: "true"
    command:
      - bash
      - -lc
      - |
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true -am -pl :dts-public-api package || true
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true -am -pl :dts-public-api spring-boot:run \
          -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Djavax.net.ssl.trustStore=/etc/dts/truststore.jks -Djavax.net.ssl.trustStorePassword=${TRUSTSTORE_PASSWORD:-changeit}"
    ports:
      - "18090:8090"
      - "5007:5007"
    volumes:
      - ../dts-source:/workspace-src
      - maven-cache:/root/.m2
      - ./services/certs/truststore.jks:/etc/dts/truststore.jks:ro
    extra_hosts:
      - "${HOST_SSO}:host-gateway"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:8090/v3/api-docs >/dev/null || wget -qO- http://127.0.0.1:8090/v3/api-docs >/dev/null"]
      interval: 10s
      timeout: 10s
      retries: 60
      start_period: 120s
    networks:
      - dts-core

  # Frontend: dts-admin-webapp (optional dev server)
  # If your project uses Vite/React/Angular dev server, adjust command/port below.
  dts-admin-webapp:
    image: node:20-alpine
    working_dir: /workspace
    depends_on:
      - dts-admin
    environment:
      PNPM_STORE_DIR: /pnpm-store
      BROWSER: none
      VITE_OPEN: "false"
      CHOKIDAR_USEPOLLING: "true"
      HOST: 0.0.0.0
      PORT: "3001"
      # Vite dev proxy target for admin webapp: call unified public API
      VITE_API_PROXY_TARGET: http://dts-public-api:8090
    command: ["sh","-lc","if [ -f package.json ]; then corepack enable; pnpm install --frozen-lockfile --ignore-scripts || pnpm install --no-frozen-lockfile --ignore-scripts; pnpm run dev -- --host 0.0.0.0 --port ${PORT:-3001} --strictPort --open=false || PORT=${PORT:-3001} pnpm start; else echo no\ package.json\ found; tail -f /dev/null; fi"]
    ports:
      - "18011:3001"
    volumes:
      - ../dts-source/dts-admin-webapp:/workspace
      - ./builds/webapp.env.development:/workspace/.env.development:ro
      - ./builds/patch-vite-env.sh:/patches/patch-vite-env.sh:ro
      - ./.pnpm-store:/pnpm-store
      - /workspace/node_modules
    networks:
      - dts-core
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:$${PORT:-3001} >/dev/null || wget -qO- http://127.0.0.1:$${PORT:-3001} >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s

  # Frontend: dts-platform-webapp (optional dev server)
  dts-platform-webapp:
    image: node:20-alpine
    working_dir: /workspace
    depends_on:
      - dts-platform
    environment:
      PNPM_STORE_DIR: /pnpm-store
      BROWSER: none
      VITE_OPEN: "false"
      CHOKIDAR_USEPOLLING: "true"
      HOST: 0.0.0.0
      PORT: "3001"
      # Vite dev proxy target for platform webapp: call unified public API
      VITE_API_PROXY_TARGET: http://dts-public-api:8090
    command: ["sh","-lc","if [ -f package.json ]; then corepack enable; pnpm install --frozen-lockfile --ignore-scripts || pnpm install --no-frozen-lockfile --ignore-scripts; pnpm run dev -- --host 0.0.0.0 --port ${PORT:-3001} --strictPort --open=false || PORT=${PORT:-3001} pnpm start; else echo no\ package.json\ found; tail -f /dev/null; fi"]
    ports:
      - "18012:3001"
    volumes:
      - ../dts-source/dts-platform-webapp:/workspace
      - ./builds/webapp.env.development:/workspace/.env.development:ro
      - ./builds/patch-vite-env.sh:/patches/patch-vite-env.sh:ro
      - ./.pnpm-store:/pnpm-store
      - /workspace/node_modules
    networks:
      - dts-core
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:$${PORT:-3001} >/dev/null || wget -qO- http://127.0.0.1:$${PORT:-3001} >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s

## Note: top-level 'networks' and 'volumes' come from docker-compose.yml

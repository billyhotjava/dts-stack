## Dev overlay: run services from source via bind mounts and live reload

services:

  # Java backend: dts-admin (Spring Boot)
  dts-admin:
    image: ${IMAGE_MAVEN}
    working_dir: /workspace-src/dts-admin
    depends_on:
      dts-pg:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${DTS_PROFILE:-dev}
      SPRING_DATASOURCE_URL: jdbc:postgresql://dts-pg:5432/${PG_DB_DTADMIN:-dts_admin}
      SPRING_DATASOURCE_USERNAME: ${PG_USER_DTADMIN:-dts_admin}
      SPRING_DATASOURCE_PASSWORD: ${PG_PWD_DTADMIN:-dts_admin}
      SPRING_LIQUIBASE_ENABLED: ${SPRING_LIQUIBASE_ENABLED:-true}
      EUREKA_CLIENT_ENABLED: ${EUREKA_CLIENT_ENABLED:-false}
      SPRING_CLOUD_CONFIG_ENABLED: ${SPRING_CLOUD_CONFIG_ENABLED:-false}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "${OAUTH2_ADMIN_CLIENT_ID:-dts-admin}"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "${OAUTH2_ADMIN_CLIENT_SECRET:-}"
      DTS_KEYCLOAK_ADMIN_CLIENT_ID: "${OAUTH2_ADMIN_CLIENT_ID:-dts-admin}"
      DTS_KEYCLOAK_ADMIN_CLIENT_SECRET: "${OAUTH2_ADMIN_CLIENT_SECRET:-}"
      JHIPSTER_CORS_ALLOWED_ORIGINS: "http://localhost:3001,http://127.0.0.1:3001,http://localhost:5173,http://127.0.0.1:5173,http://localhost:18011,http://127.0.0.1:18011"
      JHIPSTER_CORS_ALLOWED_METHODS: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      JHIPSTER_CORS_ALLOWED_HEADERS: "*"
      JHIPSTER_CORS_ALLOW_CREDENTIALS: "true"
      SPRINGDOC_API_DOCS_ENABLED: "true"
      SPRINGDOC_SWAGGER_UI_ENABLED: "true"
    command:
      - bash
      - -lc
      - |
        # Patch application-dev.yml to read datasource from env placeholders (admin)
        sh /patches/patch-app-dev-yml.sh admin || true
        # Also patch shared module (dts-common) if present
        sh /patches/patch-app-dev-yml.sh common || true
        # Pre-install shared module so local repo has dts-common
        mvn -q -f /workspace-src/dts-common/pom.xml -Pdev -DskipTests -Dmodernizer.skip=true install || true
        # Build current module and run with devtools; restarts on classpath changes
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true package || true
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true spring-boot:run \
          -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Djavax.net.ssl.trustStore=/etc/dts/truststore.jks -Djavax.net.ssl.trustStorePassword=${TRUSTSTORE_PASSWORD:-changeit}" \
          -Dspring-boot.run.arguments="--spring.datasource.url=$${SPRING_DATASOURCE_URL} --spring.datasource.username=$${SPRING_DATASOURCE_USERNAME} --spring.datasource.password=$${SPRING_DATASOURCE_PASSWORD}"
    ports:
      - "18081:8081"
      - "5005:5005"
    volumes:
      - ./source:/workspace-src
      - maven-cache:/root/.m2
      - ./services/certs/truststore.jks:/etc/dts/truststore.jks:ro
      - ./builds/patch-app-dev-yml.sh:/patches/patch-app-dev-yml.sh:ro
    extra_hosts:
      - "${HOST_SSO}:host-gateway"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:8081/v3/api-docs >/dev/null || wget -qO- http://127.0.0.1:8081/v3/api-docs >/dev/null"]
      interval: 10s
      timeout: 10s
      retries: 60
      start_period: 120s
    networks:
      - dts-core
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dts-core"
      - "traefik.http.routers.dts-admin.rule=Host(`${HOST_API}`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.dts-admin.entrypoints=websecure"
      - "traefik.http.routers.dts-admin.tls=true"
      - "traefik.http.services.dts-admin.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.dts-strip-admin.stripprefixregex.regex=/admin"
      - "traefik.http.routers.dts-admin.middlewares=dts-strip-admin@docker,cors-allow@file,security-headers@file"

  # Java backend: dts-platform (Spring Boot)
  dts-platform:
    image: ${IMAGE_MAVEN}
    working_dir: /workspace-src/dts-platform
    depends_on:
      dts-pg:
        condition: service_healthy
      dts-trino:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: ${DTS_PROFILE:-dev}
      SPRING_DATASOURCE_URL: jdbc:postgresql://dts-pg:5432/${PG_DB_DTPS:-dts_platform}
      SPRING_DATASOURCE_USERNAME: ${PG_USER_DTPS:-dts_platform}
      SPRING_DATASOURCE_PASSWORD: ${PG_PWD_DTPS:-dts_platform}
      SPRING_LIQUIBASE_ENABLED: ${SPRING_LIQUIBASE_ENABLED_PLATFORM:-true}
      EUREKA_CLIENT_ENABLED: ${EUREKA_CLIENT_ENABLED:-false}
      SPRING_CLOUD_CONFIG_ENABLED: ${SPRING_CLOUD_CONFIG_ENABLED:-false}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "${OIDC_ISSUER_URI:-https://${HOST_SSO}/realms/${KC_REALM}}"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "${OAUTH2_PLATFORM_CLIENT_ID:-dts-platform}"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "${OAUTH2_PLATFORM_CLIENT_SECRET:-}"
      JHIPSTER_CORS_ALLOWED_ORIGINS: "http://localhost:3001,http://127.0.0.1:3001,http://localhost:5173,http://127.0.0.1:5173,http://localhost:18012,http://127.0.0.1:18012"
      JHIPSTER_CORS_ALLOWED_METHODS: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      JHIPSTER_CORS_ALLOWED_HEADERS: "*"
      JHIPSTER_CORS_ALLOW_CREDENTIALS: "true"
      SPRINGDOC_API_DOCS_ENABLED: "true"
      SPRINGDOC_SWAGGER_UI_ENABLED: "true"
      DTS_JDBC_LOAD_EXTERNAL_DRIVERS: "true"
      DTS_JDBC_DRIVER_CLASS: "org.apache.hive.jdbc.HiveDriver"
      DTS_JDBC_DRIVER_JAR: "inceptor-jdbc-8.37.3.jar"
      DTS_PLATFORM_HIVE_TEST_PRESERVE_ARTIFACTS: "true"
    command:
      - bash
      - -lc
      - |
        # Patch application-dev.yml to read datasource from env placeholders (platform)
        sh /patches/patch-app-dev-yml.sh platform || true
        # Also patch shared module (dts-common) if present
        sh /patches/patch-app-dev-yml.sh common || true
        mvn -q -f /workspace-src/dts-common/pom.xml -Pdev -DskipTests -Dmodernizer.skip=true install || true
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true package || true
        mvn -q -Pdev -DskipTests -Dmodernizer.skip=true spring-boot:run \
          -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Djavax.net.ssl.trustStore=/etc/dts/truststore.jks -Djavax.net.ssl.trustStorePassword=${TRUSTSTORE_PASSWORD:-changeit}" \
          -Dspring-boot.run.arguments="--spring.datasource.url=$${SPRING_DATASOURCE_URL} --spring.datasource.username=$${SPRING_DATASOURCE_USERNAME} --spring.datasource.password=$${SPRING_DATASOURCE_PASSWORD}"
    ports:
      - "18082:8081"
      - "5006:5006"
    volumes:
      - ./source:/workspace-src
      - maven-cache:/root/.m2
      - ./services/certs/truststore.jks:/etc/dts/truststore.jks:ro
      - ./services/dts-platform/drivers:/opt/dts/drivers:ro
      - ./builds/patch-app-dev-yml.sh:/patches/patch-app-dev-yml.sh:ro
    extra_hosts:
      - "${HOST_SSO}:host-gateway"
      - "tdh01:172.16.0.154"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:8081/v3/api-docs >/dev/null || wget -qO- http://127.0.0.1:8081/v3/api-docs >/dev/null"]
      interval: 10s
      timeout: 10s
      retries: 60
      start_period: 120s
    networks:
      - dts-core
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dts-core"
      - "traefik.http.routers.dts-platform.rule=Host(`${HOST_API}`) && PathPrefix(`/platform`)"
      - "traefik.http.routers.dts-platform.entrypoints=websecure"
      - "traefik.http.routers.dts-platform.tls=true"
      - "traefik.http.services.dts-platform.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.dts-strip-platform.stripprefixregex.regex=/platform"
      - "traefik.http.routers.dts-platform.middlewares=dts-strip-platform@docker,cors-allow@file,security-headers@file"


  # Frontend: dts-admin-webapp (optional dev server)
  # If your project uses Vite/React/Angular dev server, adjust command/port below.
  dts-admin-webapp:
    image: node:22-bookworm
    working_dir: /workspace
    depends_on:
      - dts-admin
    environment:
      PNPM_STORE_DIR: /pnpm-store
      BROWSER: none
      VITE_OPEN: "false"
      VITE_ENABLE_MOCK: "false"
      CHOKIDAR_USEPOLLING: "false"
      HOST: 0.0.0.0
      PORT: "3001"
      # Vite dev proxy target for admin webapp: call dts-admin directly
      VITE_API_PROXY_TARGET: http://dts-admin:8081
    command: ["sh","-lc","if [ -f package.json ]; then corepack enable; pnpm install --frozen-lockfile --ignore-scripts || pnpm install --no-frozen-lockfile --ignore-scripts; sh /patches/patch-vite-env.sh || true; pnpm run dev -- --host 0.0.0.0 --port ${PORT:-3001} --strictPort --open=false || PORT=${PORT:-3001} pnpm start; else echo no\ package.json\ found; tail -f /dev/null; fi"]
    ports:
      - "18011:3001"
    volumes:
      - ./source/dts-admin-webapp:/workspace
      - ./source/dts-platform-webapp:/workspace/dts-platform-webapp:ro
      - ./builds/patch-vite-env.sh:/patches/patch-vite-env.sh:ro
      - pnpm-store:/pnpm-store
      - /workspace/node_modules
    networks:
      - dts-core
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:$${PORT:-3001} >/dev/null || wget -qO- http://127.0.0.1:$${PORT:-3001} >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s

  # Frontend: dts-platform-webapp (optional dev server)
  dts-platform-webapp:
    image: node:22-bookworm
    working_dir: /workspace
    depends_on:
      - dts-platform
    environment:
      PNPM_STORE_DIR: /pnpm-store
      BROWSER: none
      VITE_OPEN: "false"
      VITE_ENABLE_MOCK: "false"
      CHOKIDAR_USEPOLLING: "false"
      HOST: 0.0.0.0
      PORT: "3001"
      # Vite dev proxy target for platform webapp: call dts-platform directly
      VITE_API_PROXY_TARGET: http://dts-platform:8081
    command: ["sh","-lc","if [ -f package.json ]; then corepack enable; pnpm install --frozen-lockfile --ignore-scripts || pnpm install --no-frozen-lockfile --ignore-scripts; sh /patches/patch-vite-env.sh || true; pnpm run dev -- --host 0.0.0.0 --port ${PORT:-3001} --strictPort --open=false || PORT=${PORT:-3001} pnpm start; else echo no\ package.json\ found; tail -f /dev/null; fi"]
    ports:
      - "18012:3001"
    volumes:
      - ./source/dts-platform-webapp:/workspace
      - ./builds/patch-vite-env.sh:/patches/patch-vite-env.sh:ro
      - pnpm-store:/pnpm-store
      - /workspace/node_modules
    networks:
      - dts-core
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dts-core"
      - "traefik.http.routers.platform-ui.rule=Host(`${HOST_PLATFORM_UI}`)"
      - "traefik.http.routers.platform-ui.entrypoints=websecure"
      - "traefik.http.routers.platform-ui.tls=true"
      - "traefik.http.services.platform-ui.loadbalancer.server.port=${PORT:-3001}"
      - "traefik.http.routers.platform-ui.middlewares=security-headers@file"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://127.0.0.1:$${PORT:-3001} >/dev/null || wget -qO- http://127.0.0.1:$${PORT:-3001} >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s

volumes:
  pnpm-store:

## Note: top-level networks may also be defined in docker-compose.yml

//
// Autogenerated by Thrift Compiler (0.12.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

uniAuthService_getAuthModule_args = function(args) {
  this.tk = null;
  this.req = null;
  if (args) {
    if (args.tk !== undefined && args.tk !== null) {
      this.tk = new sessionTicket(args.tk);
    }
    if (args.req !== undefined && args.req !== null) {
      this.req = new msgRequest(args.req);
    }
  }
};
uniAuthService_getAuthModule_args.prototype = {};
uniAuthService_getAuthModule_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.tk = new sessionTicket();
        this.tk.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new msgRequest();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_getAuthModule_args.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_getAuthModule_args');
  if (this.tk !== null && this.tk !== undefined) {
    output.writeFieldBegin('tk', Thrift.Type.STRUCT, 1);
    this.tk.write(output);
    output.writeFieldEnd();
  }
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 2);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_getAuthModule_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new msgResponse(args.success);
    }
  }
};
uniAuthService_getAuthModule_result.prototype = {};
uniAuthService_getAuthModule_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new msgResponse();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_getAuthModule_result.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_getAuthModule_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_initAuth_args = function(args) {
  this.tk = null;
  this.req = null;
  if (args) {
    if (args.tk !== undefined && args.tk !== null) {
      this.tk = new sessionTicket(args.tk);
    }
    if (args.req !== undefined && args.req !== null) {
      this.req = new msgRequest(args.req);
    }
  }
};
uniAuthService_initAuth_args.prototype = {};
uniAuthService_initAuth_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.tk = new sessionTicket();
        this.tk.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new msgRequest();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_initAuth_args.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_initAuth_args');
  if (this.tk !== null && this.tk !== undefined) {
    output.writeFieldBegin('tk', Thrift.Type.STRUCT, 1);
    this.tk.write(output);
    output.writeFieldEnd();
  }
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 2);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_initAuth_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new msgResponse(args.success);
    }
  }
};
uniAuthService_initAuth_result.prototype = {};
uniAuthService_initAuth_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new msgResponse();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_initAuth_result.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_initAuth_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_startAuth_args = function(args) {
  this.tk = null;
  this.req = null;
  if (args) {
    if (args.tk !== undefined && args.tk !== null) {
      this.tk = new sessionTicket(args.tk);
    }
    if (args.req !== undefined && args.req !== null) {
      this.req = new msgRequest(args.req);
    }
  }
};
uniAuthService_startAuth_args.prototype = {};
uniAuthService_startAuth_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.tk = new sessionTicket();
        this.tk.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new msgRequest();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_startAuth_args.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_startAuth_args');
  if (this.tk !== null && this.tk !== undefined) {
    output.writeFieldBegin('tk', Thrift.Type.STRUCT, 1);
    this.tk.write(output);
    output.writeFieldEnd();
  }
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 2);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_startAuth_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new msgResponse(args.success);
    }
  }
};
uniAuthService_startAuth_result.prototype = {};
uniAuthService_startAuth_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new msgResponse();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_startAuth_result.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_startAuth_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_verifyAuth_args = function(args) {
  this.tk = null;
  this.req = null;
  if (args) {
    if (args.tk !== undefined && args.tk !== null) {
      this.tk = new sessionTicket(args.tk);
    }
    if (args.req !== undefined && args.req !== null) {
      this.req = new msgRequest(args.req);
    }
  }
};
uniAuthService_verifyAuth_args.prototype = {};
uniAuthService_verifyAuth_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.tk = new sessionTicket();
        this.tk.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new msgRequest();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_verifyAuth_args.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_verifyAuth_args');
  if (this.tk !== null && this.tk !== undefined) {
    output.writeFieldBegin('tk', Thrift.Type.STRUCT, 1);
    this.tk.write(output);
    output.writeFieldEnd();
  }
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 2);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_verifyAuth_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new msgResponse(args.success);
    }
  }
};
uniAuthService_verifyAuth_result.prototype = {};
uniAuthService_verifyAuth_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new msgResponse();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_verifyAuth_result.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_verifyAuth_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_cancelAuth_args = function(args) {
  this.tk = null;
  this.req = null;
  if (args) {
    if (args.tk !== undefined && args.tk !== null) {
      this.tk = new sessionTicket(args.tk);
    }
    if (args.req !== undefined && args.req !== null) {
      this.req = new msgRequest(args.req);
    }
  }
};
uniAuthService_cancelAuth_args.prototype = {};
uniAuthService_cancelAuth_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.tk = new sessionTicket();
        this.tk.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new msgRequest();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_cancelAuth_args.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_cancelAuth_args');
  if (this.tk !== null && this.tk !== undefined) {
    output.writeFieldBegin('tk', Thrift.Type.STRUCT, 1);
    this.tk.write(output);
    output.writeFieldEnd();
  }
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 2);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthService_cancelAuth_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new msgResponse(args.success);
    }
  }
};
uniAuthService_cancelAuth_result.prototype = {};
uniAuthService_cancelAuth_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new msgResponse();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

uniAuthService_cancelAuth_result.prototype.write = function(output) {
  output.writeStructBegin('uniAuthService_cancelAuth_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

uniAuthServiceClient = function(input, output) {
  this.input = input;
  this.output = (!output) ? input : output;
  this.seqid = 0;
};
uniAuthServiceClient.prototype = {};

uniAuthServiceClient.prototype.getAuthModule = function(tk, req, callback) {
  this.send_getAuthModule(tk, req, callback); 
  if (!callback) {
    return this.recv_getAuthModule();
  }
};

uniAuthServiceClient.prototype.send_getAuthModule = function(tk, req, callback) {
  var params = {
    tk: tk,
    req: req
  };
  var args = new uniAuthService_getAuthModule_args(params);
  try {
    this.output.writeMessageBegin('getAuthModule', Thrift.MessageType.CALL, this.seqid);
    args.write(this.output);
    this.output.writeMessageEnd();
    if (callback) {
      var self = this;
      this.output.getTransport().flush(true, function() {
        var result = null;
        try {
          result = self.recv_getAuthModule();
        } catch (e) {
          result = e;
        }
        callback(result);
      });
    } else {
      return this.output.getTransport().flush();
    }
  }
  catch (e) {
    if (typeof this.output.getTransport().reset === 'function') {
      this.output.getTransport().reset();
    }
    throw e;
  }
};

uniAuthServiceClient.prototype.recv_getAuthModule = function() {
  var ret = this.input.readMessageBegin();
  var mtype = ret.mtype;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new uniAuthService_getAuthModule_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'getAuthModule failed: unknown result';
};

uniAuthServiceClient.prototype.initAuth = function(tk, req, callback) {
  this.send_initAuth(tk, req, callback); 
  if (!callback) {
    return this.recv_initAuth();
  }
};

uniAuthServiceClient.prototype.send_initAuth = function(tk, req, callback) {
  var params = {
    tk: tk,
    req: req
  };
  var args = new uniAuthService_initAuth_args(params);
  try {
    this.output.writeMessageBegin('initAuth', Thrift.MessageType.CALL, this.seqid);
    args.write(this.output);
    this.output.writeMessageEnd();
    if (callback) {
      var self = this;
      this.output.getTransport().flush(true, function() {
        var result = null;
        try {
          result = self.recv_initAuth();
        } catch (e) {
          result = e;
        }
        callback(result);
      });
    } else {
      return this.output.getTransport().flush();
    }
  }
  catch (e) {
    if (typeof this.output.getTransport().reset === 'function') {
      this.output.getTransport().reset();
    }
    throw e;
  }
};

uniAuthServiceClient.prototype.recv_initAuth = function() {
  var ret = this.input.readMessageBegin();
  var mtype = ret.mtype;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new uniAuthService_initAuth_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'initAuth failed: unknown result';
};

uniAuthServiceClient.prototype.startAuth = function(tk, req, callback) {
  this.send_startAuth(tk, req, callback); 
  if (!callback) {
    return this.recv_startAuth();
  }
};

uniAuthServiceClient.prototype.send_startAuth = function(tk, req, callback) {
  var params = {
    tk: tk,
    req: req
  };
  var args = new uniAuthService_startAuth_args(params);
  try {
    this.output.writeMessageBegin('startAuth', Thrift.MessageType.CALL, this.seqid);
    args.write(this.output);
    this.output.writeMessageEnd();
    if (callback) {
      var self = this;
      this.output.getTransport().flush(true, function() {
        var result = null;
        try {
          result = self.recv_startAuth();
        } catch (e) {
          result = e;
        }
        callback(result);
      });
    } else {
      return this.output.getTransport().flush();
    }
  }
  catch (e) {
    if (typeof this.output.getTransport().reset === 'function') {
      this.output.getTransport().reset();
    }
    throw e;
  }
};

uniAuthServiceClient.prototype.recv_startAuth = function() {
  var ret = this.input.readMessageBegin();
  var mtype = ret.mtype;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new uniAuthService_startAuth_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'startAuth failed: unknown result';
};

uniAuthServiceClient.prototype.verifyAuth = function(tk, req, callback) {
  this.send_verifyAuth(tk, req, callback); 
  if (!callback) {
    return this.recv_verifyAuth();
  }
};

uniAuthServiceClient.prototype.send_verifyAuth = function(tk, req, callback) {
  var params = {
    tk: tk,
    req: req
  };
  var args = new uniAuthService_verifyAuth_args(params);
  try {
    this.output.writeMessageBegin('verifyAuth', Thrift.MessageType.CALL, this.seqid);
    args.write(this.output);
    this.output.writeMessageEnd();
    if (callback) {
      var self = this;
      this.output.getTransport().flush(true, function() {
        var result = null;
        try {
          result = self.recv_verifyAuth();
        } catch (e) {
          result = e;
        }
        callback(result);
      });
    } else {
      return this.output.getTransport().flush();
    }
  }
  catch (e) {
    if (typeof this.output.getTransport().reset === 'function') {
      this.output.getTransport().reset();
    }
    throw e;
  }
};

uniAuthServiceClient.prototype.recv_verifyAuth = function() {
  var ret = this.input.readMessageBegin();
  var mtype = ret.mtype;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new uniAuthService_verifyAuth_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'verifyAuth failed: unknown result';
};

uniAuthServiceClient.prototype.cancelAuth = function(tk, req, callback) {
  this.send_cancelAuth(tk, req, callback); 
  if (!callback) {
    return this.recv_cancelAuth();
  }
};

uniAuthServiceClient.prototype.send_cancelAuth = function(tk, req, callback) {
  var params = {
    tk: tk,
    req: req
  };
  var args = new uniAuthService_cancelAuth_args(params);
  try {
    this.output.writeMessageBegin('cancelAuth', Thrift.MessageType.CALL, this.seqid);
    args.write(this.output);
    this.output.writeMessageEnd();
    if (callback) {
      var self = this;
      this.output.getTransport().flush(true, function() {
        var result = null;
        try {
          result = self.recv_cancelAuth();
        } catch (e) {
          result = e;
        }
        callback(result);
      });
    } else {
      return this.output.getTransport().flush();
    }
  }
  catch (e) {
    if (typeof this.output.getTransport().reset === 'function') {
      this.output.getTransport().reset();
    }
    throw e;
  }
};

uniAuthServiceClient.prototype.recv_cancelAuth = function() {
  var ret = this.input.readMessageBegin();
  var mtype = ret.mtype;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new uniAuthService_cancelAuth_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'cancelAuth failed: unknown result';
};

## Production apps overlay: use prebuilt images, no local builds

services:

  dts-admin:
    image: ${IMAGE_DTS_ADMIN:?Set IMAGE_DTS_ADMIN in imgversion.conf or .env}
    ports: []
    depends_on:
      dts-pg:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${DTS_PROFILE:-prod}
      SPRING_DATASOURCE_URL: jdbc:postgresql://dts-pg:5432/${PG_DB_DTADMIN:-dts_admin}
      SPRING_DATASOURCE_USERNAME: ${PG_USER_DTADMIN:-dts_admin}
      SPRING_DATASOURCE_PASSWORD: ${PG_PWD_DTADMIN:-dts_admin}
      SPRING_LIQUIBASE_ENABLED: ${SPRING_LIQUIBASE_ENABLED:-true}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: ${OIDC_ISSUER_URI}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: ${OIDC_ISSUER_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "${OAUTH2_ADMIN_CLIENT_ID:-dts-admin}"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "${OAUTH2_ADMIN_CLIENT_SECRET:-}"
      DTS_KEYCLOAK_ADMIN_CLIENT_ID: "${OAUTH2_ADMIN_CLIENT_ID:-dts-admin}"
      DTS_KEYCLOAK_ADMIN_CLIENT_SECRET: "${OAUTH2_ADMIN_CLIENT_SECRET:-}"
      # Target client that holds data roles (client roles). Default matches our realm seeds.
      DTS_KEYCLOAK_TARGET_CLIENT_ID: "${OAUTH2_PLATFORM_CLIENT_ID:-dts-platform}"
      DTS_KEYCLOAK_USE_CLIENT_ROLES: "${DTS_KEYCLOAK_USE_CLIENT_ROLES:-false}"
      # Default data level for newly created root organizations (avoids NOT NULL violations)
      DTS_ORG_UNASSIGNED_DATA_LEVEL: "${DTS_ORG_UNASSIGNED_DATA_LEVEL:-INTERNAL}"
      # Enable org<->Keycloak group provisioning (requires KC admin privileges for this client)
      DTS_KEYCLOAK_GROUP_PROVISIONING_ENABLED: "${DTS_KEYCLOAK_GROUP_PROVISIONING_ENABLED:-true}"
      JHIPSTER_CORS_ALLOWED_ORIGINS: "https://${HOST_ADMIN_UI},https://${HOST_PLATFORM_UI},https://${HOST_API}"
      JHIPSTER_CORS_ALLOWED_METHODS: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      JHIPSTER_CORS_ALLOWED_HEADERS: "*"
      JHIPSTER_CORS_ALLOW_CREDENTIALS: "true"
      SPRING_CLOUD_CONFIG_ENABLED: "false"
      EUREKA_CLIENT_ENABLED: "false"
      JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStore=/etc/dts/truststore.p12 -Djavax.net.ssl.trustStorePassword=${TRUSTSTORE_PASSWORD:-changeit} -Djavax.net.ssl.trustStoreType=PKCS12 -Dspring.datasource.url=$${SPRING_DATASOURCE_URL} -Dspring.datasource.username=$${SPRING_DATASOURCE_USERNAME} -Dspring.datasource.password=$${SPRING_DATASOURCE_PASSWORD}"
      # Optional PKI login integration (see docs/pki-auth.md)
      DTS_PKI_ENABLED: "${DTS_PKI_ENABLED:-false}"
      DTS_PKI_MODE: "${DTS_PKI_MODE:-disabled}"
      DTS_PKI_ACCEPT_FORWARDED_CERT: "${DTS_PKI_ACCEPT_FORWARDED_CERT:-false}"
      DTS_PKI_CLIENT_CERT_HEADER: "${DTS_PKI_CLIENT_CERT_HEADER:-X-Forwarded-Tls-Client-Cert}"
      DTS_PKI_ISSUER_CN: "${DTS_PKI_ISSUER_CN:-}"
      DTS_PKI_API_BASE: "${DTS_PKI_API_BASE:-}"
      DTS_PKI_API_TOKEN: "${DTS_PKI_API_TOKEN:-}"
      DTS_PKI_API_TIMEOUT: "${DTS_PKI_API_TIMEOUT:-3000}"
      DTS_PKI_ALLOW_MOCK: "${DTS_PKI_ALLOW_MOCK:-false}"
      DTS_PKI_GATEWAY_HOST: "${DTS_PKI_GATEWAY_HOST:-}"
      DTS_PKI_GATEWAY_PORT: "${DTS_PKI_GATEWAY_PORT:-0}"
      DTS_PKI_DIGEST: "${DTS_PKI_DIGEST:-SHA1}"
      DTS_PKI_VENDOR_JAR: "${DTS_PKI_VENDOR_JAR:-}"
      
    volumes:
      - ./services/certs/truststore.p12:/etc/dts/truststore.p12:ro,z
      # Optional: mount vendor PKI client jar(s) like svs-uk_custom.jar into /opt/dts/vendor
      - ./services/dts-admin/vendor:/opt/dts/vendor:ro,z
    extra_hosts:
      - "${HOST_SSO}:${HOST_GATEWAY_IP:-172.17.0.1}"
    networks:
      - dts-core
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dts-core"
      - "traefik.http.routers.dts-admin.rule=Host(`${HOST_API}`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.dts-admin.entrypoints=websecure"
      - "traefik.http.routers.dts-admin.tls=true"
      - "traefik.http.services.dts-admin.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.dts-strip-admin.stripprefixregex.regex=/admin"
      - "traefik.http.routers.dts-admin.middlewares=dts-strip-admin@docker,cors-allow@file,security-headers@file"
      # Same-origin API under admin domain to avoid CORS: https://admin.${BASE_DOMAIN}/api/* -> dts-admin:8081
      - "traefik.http.routers.dts-admin-uiapi.rule=Host(`${HOST_ADMIN_UI}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.dts-admin-uiapi.entrypoints=websecure"
      - "traefik.http.routers.dts-admin-uiapi.tls=true"
      - "traefik.http.routers.dts-admin-uiapi.service=dts-admin"
      - "traefik.http.routers.dts-admin-uiapi.middlewares=cors-allow@file,security-headers@file"

  dts-platform:
    image: ${IMAGE_DTS_PLATFORM:?Set IMAGE_DTS_PLATFORM in imgversion.conf or .env}
    ports: []
    depends_on:
      dts-pg:
        condition: service_healthy
      dts-trino:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: ${DTS_PROFILE:-prod}
      SPRING_DATASOURCE_URL: jdbc:postgresql://dts-pg:5432/${PG_DB_DTPS:-dts_platform}
      SPRING_DATASOURCE_USERNAME: ${PG_USER_DTPS:-dts_platform}
      SPRING_DATASOURCE_PASSWORD: ${PG_PWD_DTPS:-dts_platform}
      SPRING_LIQUIBASE_ENABLED: ${SPRING_LIQUIBASE_ENABLED_PLATFORM:-true}
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: ${OIDC_ISSUER_URI}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: ${OIDC_ISSUER_URI}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "${OAUTH2_PLATFORM_CLIENT_ID:-dts-platform}"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "${OAUTH2_PLATFORM_CLIENT_SECRET:-}"
      JHIPSTER_CORS_ALLOWED_ORIGINS: "https://${HOST_PLATFORM_UI},https://${HOST_ADMIN_UI},https://${HOST_API}"
      JHIPSTER_CORS_ALLOWED_METHODS: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      JHIPSTER_CORS_ALLOWED_HEADERS: "*"
      JHIPSTER_CORS_ALLOW_CREDENTIALS: "true"
      SPRING_CLOUD_CONFIG_ENABLED: "false"
      EUREKA_CLIENT_ENABLED: "false"
      JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStore=/etc/dts/truststore.p12 -Djavax.net.ssl.trustStorePassword=${TRUSTSTORE_PASSWORD:-changeit} -Djavax.net.ssl.trustStoreType=PKCS12 -Dspring.datasource.url=$${SPRING_DATASOURCE_URL} -Dspring.datasource.username=$${SPRING_DATASOURCE_USERNAME} -Dspring.datasource.password=$${SPRING_DATASOURCE_PASSWORD}"
      # Prefer loading vendor JDBC driver from mounted drivers folder
      DTS_JDBC_LOAD_EXTERNAL_DRIVERS: "true"
      DTS_JDBC_DRIVER_CLASS: "org.apache.hive.jdbc.HiveDriver"
      DTS_JDBC_DRIVER_JAR: "quark-driver-8.37.3.jar"
      DTS_FEATURE_PLATFORM_KC_LOCALIZATION: "true"
      # Data Standard attachments: encrypted filesystem storage
      DATA_STANDARD_ATTACHMENT_STORAGE_STRATEGY: "filesystem"
      DATA_STANDARD_STORAGE_DIR: "/opt/dts/upload"
      # Base64 key for AES-GCM (16 bytes here for demo; replace in production)
      DATA_STANDARD_ENCRYPTION_KEY: "MDEyMzQ1Njc4OWFiY2RlZg=="
      # Centralize audit logs to admin: enable forward by default
      AUDITING_FORWARD_ENABLED: "${AUDITING_FORWARD_ENABLED:-true}"
      DTS_COMMON_AUDIT_ENABLED: "${DTS_COMMON_AUDIT_ENABLED:-true}"
      # Admin API base (ingest endpoint is /api/audit-events under this base URL)
      DTS_COMMON_AUDIT_BASE_URL: "https://${HOST_ADMIN_UI}"
      # Optional shared token for admin ingest validation; leave empty by default to avoid mismatches
      DTS_COMMON_AUDIT_TOKEN: "${DTS_COMMON_AUDIT_TOKEN:-}"
    volumes:
      - ./services/certs/truststore.p12:/etc/dts/truststore.p12:ro,z
      # Mount vendor JDBC driver(s) for Hive to avoid Hadoop conflicts
      - ./services/dts-platform/drivers:/opt/dts/drivers:ro,z
      # Encrypted attachments storage (host-bound)
      - ./services/dts-platform/upload:/opt/dts/upload:Z
    extra_hosts:
      - "${HOST_SSO}:${HOST_GATEWAY_IP:-172.17.0.1}"
    networks:
      - dts-core
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dts-core"
      - "traefik.http.routers.dts-platform.rule=Host(`${HOST_API}`) && PathPrefix(`/platform`)"
      - "traefik.http.routers.dts-platform.entrypoints=websecure"
      - "traefik.http.routers.dts-platform.tls=true"
      - "traefik.http.services.dts-platform.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.dts-strip-platform.stripprefixregex.regex=/platform"
      - "traefik.http.routers.dts-platform.middlewares=dts-strip-platform@docker,cors-allow@file,security-headers@file"
      # Same-origin API under platform domain: https://platform.${BASE_DOMAIN}/api/* -> dts-platform:8081
      - "traefik.http.routers.dts-platform-uiapi.rule=Host(`${HOST_PLATFORM_UI}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.dts-platform-uiapi.entrypoints=websecure"
      - "traefik.http.routers.dts-platform-uiapi.tls=true"
      - "traefik.http.routers.dts-platform-uiapi.service=dts-platform"
      - "traefik.http.routers.dts-platform-uiapi.middlewares=cors-allow@file,security-headers@file"

  dts-admin-webapp:
    image: ${IMAGE_DTS_ADMIN_WEBAPP:?Set IMAGE_DTS_ADMIN_WEBAPP in imgversion.conf or .env}
    ports: []
    networks:
      - dts-core
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dts-core"
      - "traefik.http.routers.dts-admin-ui.rule=Host(`${HOST_ADMIN_UI}`)"
      - "traefik.http.routers.dts-admin-ui.entrypoints=websecure"
      - "traefik.http.routers.dts-admin-ui.tls=true"
      - "traefik.http.services.dts-admin-ui.loadbalancer.server.port=80"

  dts-platform-webapp:
    image: ${IMAGE_DTS_PLATFORM_WEBAPP:?Set IMAGE_DTS_PLATFORM_WEBAPP in imgversion.conf or .env}
    ports: []
    environment:
      API_PROXY_TARGET: http://dts-platform:8081
      # Admin API base URL for Keycloak localization and other admin-proxied calls
      VITE_ADMIN_API_BASE_URL: "https://${HOST_ADMIN_UI}/api"
    networks:
      - dts-core
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dts-core"
      - "traefik.http.routers.dts-platform-ui.rule=Host(`${HOST_PLATFORM_UI}`)"
      - "traefik.http.routers.dts-platform-ui.entrypoints=websecure"
      - "traefik.http.routers.dts-platform-ui.tls=true"
      - "traefik.http.services.dts-platform-ui.loadbalancer.server.port=80"

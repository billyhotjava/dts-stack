# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

---
# Conditionally disable springdoc on missing api-docs profile
spring:
  config:
    activate:
      on-profile: '!api-docs'
springdoc:
  api-docs:
    enabled: false
---
eureka:
  client:
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    appname: dtsplatform
    instanceId: dtsplatform:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary # This is needed for the load balancer
      profile: ${spring.profiles.active}
      version: '@project.version@'
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
      context-path: ${server.servlet.context-path:}
feign:
  circuitbreaker:
    enabled: true
  # client:
  #   config:
  #     default:
  #       connectTimeout: 5000
  #       readTimeout: 5000
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
          - caches
          - liquibase
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
  observations:
    key-values:
      application: ${spring.application.name}
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true
    tags:
      application: ${spring.application.name}

spring:
  application:
    name: dtsPlatform
  docker:
    compose:
      enabled: true
      lifecycle-management: start-only
      file: src/main/docker/postgresql.yml
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: '@spring.profiles.active@'
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.timezone.default_storage: NORMALIZE
      hibernate.type.preferred_instant_jdbc_type: TIMESTAMP
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
      hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
      hibernate.cache.use_minimal_puts: true
      hibernate.cache.hazelcast.instance_name: dtsPlatform
      hibernate.cache.hazelcast.use_lite_member: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  mvc:
    problemdetails:
      enabled: true
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: http://dts-keycloak:8080/realms/S10
        registration:
          oidc:
            client-id: ${OAUTH2_PLATFORM_CLIENT_ID:internal}
            client-secret: ${OAUTH2_PLATFORM_CLIENT_SECRET:internal}
            scope: openid, profile, email, offline_access # last one for refresh tokens
  task:
    execution:
      thread-name-prefix: dts-platform-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: dts-platform-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true

server:
  servlet:
    session:
      cookie:
        http-only: true

springdoc:
  show-actuator: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

dts:
  admin:
    enabled: true
    base-url: http://dts-admin:8081
    api-path: /api
    admin-api-path: /api/admin
  platform:
    hive:
      enabled: false
      jdbc-url: jdbc:hive2://dts-hive:10000/default
      username: ""
      password: ""
      tolerant: true
      properties: {}
  jdbc:
    # Directory to search for external JDBC drivers (jar files) at runtime.
    # Place vendor-provided drivers here (e.g., TDS/Inceptor client jars).
    drivers-dir: /opt/dts/drivers
    # Whether to enable loading JDBC drivers from the external directory above.
    # Enabled by default now to use vendor driver and avoid Hadoop conflicts.
    load-external-drivers: true
    # Optional: specify a concrete driver class to load/register (e.g., org.apache.hive.jdbc.HiveDriver).
    # If unset, the loader will try ServiceLoader and known fallback classes.
    driver-class: 
    # Optional: specify a particular jar file name or absolute path to load, instead of scanning the directory.
    # Example: inceptor-driver-8.37.3.jar or /opt/dts/drivers/inceptor-driver-8.37.3.jar
    driver-jar: 

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'dtsPlatformApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #   allowed-origins: "http://localhost:8100,http://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
  #   allow-credentials: true
  #   max-age: 1800
  mail:
    from: dtsPlatform@localhost
  api-docs:
    default-include-pattern: /api/**
    management-include-pattern: /management/**
    title: Dts Platform API
    description: Dts Platform API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    oauth2:
      audience:
        - account
        - api://default

# jhipster-needle-add-application-yaml-document
---
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:

auditing:
  enabled: true
  queue-capacity: 5000
  retention-days: 180
  encryption-key: ${AUDITING_ENCRYPTION_KEY:}
  hmac-key: ${AUDITING_HMAC_KEY:}
  forward-enabled: ${AUDITING_FORWARD_ENABLED:false}
  forward-retry-interval: 60000

dts:
  common:
    audit:
      enabled: ${DTS_COMMON_AUDIT_ENABLED:false}
      base-url: ${DTS_COMMON_AUDIT_BASE_URL:}
      service-token: ${DTS_COMMON_AUDIT_TOKEN:}
  platform:
    data-standard:
      encryption-key: ${DATA_STANDARD_ENCRYPTION_KEY:}
      key-version: ${DATA_STANDARD_KEY_VERSION:v1}
      attachment:
        max-file-size: ${DATA_STANDARD_MAX_FILE_SIZE:209715200}
        allowed-extensions: docx,wps,pdf,xlsx,xls,md,txt
        storage-strategy: database
    governance:
      quality:
        enabled: ${DTS_GOVERNANCE_QUALITY_ENABLED:true}
        default-executor: ${DTS_GOVERNANCE_QUALITY_EXECUTOR:hive}
        max-concurrent: ${DTS_GOVERNANCE_QUALITY_MAX_CONCURRENT:5}
        retry-count: ${DTS_GOVERNANCE_QUALITY_RETRY:1}
        timeout: ${DTS_GOVERNANCE_QUALITY_TIMEOUT:PT10M}
        auto-generate-ticket: ${DTS_GOVERNANCE_QUALITY_AUTOTICKET:true}
      compliance:
        enabled: ${DTS_GOVERNANCE_COMPLIANCE_ENABLED:true}
        evidence-required-default: ${DTS_GOVERNANCE_COMPLIANCE_EVIDENCE:true}
        auto-ticket: ${DTS_GOVERNANCE_COMPLIANCE_AUTOTICKET:true}
        sla: ${DTS_GOVERNANCE_COMPLIANCE_SLA:P7D}
      issue:
        default-assignee: ${DTS_GOVERNANCE_ISSUE_ASSIGNEE:}
        default-priority: ${DTS_GOVERNANCE_ISSUE_PRIORITY:MEDIUM}
        reminder-interval: ${DTS_GOVERNANCE_ISSUE_REMINDER:P3D}
        auto-close-after: ${DTS_GOVERNANCE_ISSUE_AUTOCLOSE:P30D}
      datasource:
        primary: ${DTS_GOVERNANCE_PRIMARY_SOURCE:foundation-hive}
        allow-multiple: ${DTS_GOVERNANCE_ALLOW_MULTIPLE:false}
        optional-sources: ${DTS_GOVERNANCE_OPTIONAL_SOURCES:}

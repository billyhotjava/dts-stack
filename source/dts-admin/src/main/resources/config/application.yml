# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

---
# Conditionally disable springdoc on missing api-docs profile
spring:
  config:
    activate:
      on-profile: '!api-docs'
springdoc:
  api-docs:
    enabled: false
---
eureka:
  client:
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    appname: dtsadmin
    instanceId: dtsadmin:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary # This is needed for the load balancer
      profile: ${spring.profiles.active}
      version: '@project.version@'
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
      context-path: ${server.servlet.context-path:}
feign:
  circuitbreaker:
    enabled: true
  # client:
  #   config:
  #     default:
  #       connectTimeout: 5000
  #       readTimeout: 5000
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
          - caches
          - liquibase
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
  observations:
    key-values:
      application: ${spring.application.name}
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true
    tags:
      application: ${spring.application.name}

spring:
  application:
    name: dtsAdmin
  docker:
    compose:
      enabled: true
      lifecycle-management: start-only
      file: src/main/docker/postgresql.yml
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: '@spring.profiles.active@'
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  # custom dev flags
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.timezone.default_storage: NORMALIZE
      hibernate.type.preferred_instant_jdbc_type: TIMESTAMP
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
      hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
      hibernate.cache.use_minimal_puts: true
      hibernate.cache.hazelcast.instance_name: dtsAdmin
      hibernate.cache.hazelcast.use_lite_member: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  mvc:
    problemdetails:
      enabled: true
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: http://dts-keycloak:8080/realms/S10
        registration:
          oidc:
            client-id: ${OAUTH2_ADMIN_CLIENT_ID:internal}
            client-secret: ${OAUTH2_ADMIN_CLIENT_SECRET:internal}
            scope: openid, profile, email, offline_access # last one for refresh tokens
  task:
    execution:
      thread-name-prefix: dts-admin-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000

server:
  forward-headers-strategy: framework
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto
      host-header: x-forwarded-host
      internal-proxies: ${DTS_TRUSTED_PROXY_REGEX:.*}
    scheduling:
      thread-name-prefix: dts-admin-scheduling-
      pool:
        size: 2
  servlet:
    session:
      cookie:
        http-only: true
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true

springdoc:
  show-actuator: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

auditing:
  enabled: true
  queue-capacity: ${AUDIT_QUEUE_CAPACITY:5000}
  retention-days: ${AUDIT_RETENTION_DAYS:180}
  encryption-key: ${AUDIT_ENCRYPTION_KEY:}
  hmac-key: ${AUDIT_HMAC_KEY:${AUDIT_ENCRYPTION_KEY:}}
  forward-enabled: ${AUDIT_FORWARD_ENABLED:false}
  forward-retry-interval: ${AUDIT_FORWARD_RETRY_INTERVAL:60000}


dts:
  keycloak:
    admin-client-id: "${DTS_KEYCLOAK_ADMIN_CLIENT_ID:${OAUTH2_ADMIN_CLIENT_ID:${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID:}}}"
    admin-client-secret: "${DTS_KEYCLOAK_ADMIN_CLIENT_SECRET:${OAUTH2_ADMIN_CLIENT_SECRET:${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET:}}}"
    # Business client where data roles (DEPT/INST_DATA_*) are defined as client roles
    # Default to platform client id to match realm seeds (override with DTS_KEYCLOAK_TARGET_CLIENT_ID if different)
    target-client-id: "${DTS_KEYCLOAK_TARGET_CLIENT_ID:${KC_SYNC_TARGET_CLIENT_ID:${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID:${OAUTH2_PLATFORM_CLIENT_ID:dts-platform}}}}"
    # Whether to write DEPT/INST data roles to Keycloak as client roles.
    # Default false: rely on admin DB role assignments and enrich platform login response.
    use-client-roles: ${DTS_KEYCLOAK_USE_CLIENT_ROLES:false}
    # Controls whether dts-admin will auto-provision/sync Keycloak groups for organizations.
    # Default false to avoid startup failures when the client lacks admin privileges.
    # Enable by default; disable explicitly with DTS_KEYCLOAK_GROUP_PROVISIONING_ENABLED=false if KC admin perms not granted
    group-provisioning-enabled: ${DTS_KEYCLOAK_GROUP_PROVISIONING_ENABLED:false}
  platform:
    enabled: ${DTS_PLATFORM_SYNC_ENABLED:true}
    base-url: ${DTS_PLATFORM_BASE_URL:http://dts-platform:8081}
    api-path: ${DTS_PLATFORM_API_PATH:/api}
    service-name: ${DTS_PLATFORM_SERVICE_NAME:dts-admin}
  infra:
    heartbeat:
      enabled: ${DTS_INFRA_HEARTBEAT_ENABLED:true}
      interval-ms: ${DTS_INFRA_HEARTBEAT_INTERVAL_MS:60000}
      initial-delay-ms: ${DTS_INFRA_HEARTBEAT_INITIAL_DELAY_MS:15000}
      timeout-ms: ${DTS_INFRA_HEARTBEAT_TIMEOUT_MS:5000}
  organization:
    default-root-name: ${DTS_ORG_DEFAULT_ROOT_NAME:}
    unassigned-name: ${DTS_ORG_UNASSIGNED_NAME:}
    unassigned-description: ${DTS_ORG_UNASSIGNED_DESCRIPTION:}
    unassigned-data-level: ${DTS_ORG_UNASSIGNED_DATA_LEVEL:}
  admin:
    infra:
      encryption-key: ${DTS_ADMIN_INFRA_ENCRYPTION_KEY:}
      key-version: ${DTS_ADMIN_INFRA_KEY_VERSION:v1}
    require-approval:
      portal-menu:
        # 强约束字段（可见性/授权）变更是否必须走审批：visibilityRules/allowedRoles/allowedPermissions/maxDataLevel
        visibility: ${DTS_REQUIRE_APPROVAL_PORTAL_MENU_VISIBILITY:true}
        # 结构/展示类变更（name/icon/sortOrder/path/component/parent/deleted）是否需要审批（默认开启）
        structure: ${DTS_REQUIRE_APPROVAL_PORTAL_MENU_STRUCTURE:true}
  session:
    # Maximum idle time (in minutes) for interactive administrator sessions before forcing re-authentication
    max-idle-minutes: ${DTS_SESSION_MAX_IDLE_MINUTES:10}

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'dtsAdminApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #   allowed-origins: "http://localhost:8100,http://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
  #   allow-credentials: true
  #   max-age: 1800
  mail:
    from: dtsAdmin@localhost
  api-docs:
    default-include-pattern: /api/**
    management-include-pattern: /management/**
    title: Dts Admin API
    description: Dts Admin API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    oauth2:
      audience:
        # Accept tokens minted for the configured admin OIDC client (single-client mode)
        - ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID:${OAUTH2_ADMIN_CLIENT_ID:dts-system}}
        - account
        - api://default

# jhipster-needle-add-application-yaml-document
---
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
dts:
  common:
    audit:
      enabled: false
      # Base URL of dts-common service for audit writes, e.g. http://localhost:8082
      base-url: 
      # Optional bearer token for dts-common
      token: 
    notify:
      enabled: false
      # Base URL of dts-common notify endpoint
      base-url: 
      # Optional bearer token for dts-common
      token: 
  dev:
    seed:
      enabled: true
  pki:
    # Feature flag: enable PKI login endpoints in admin service
    enabled: ${DTS_PKI_ENABLED:false}
    # Modes: mtls | assertion | disabled
    mode: ${DTS_PKI_MODE:disabled}
    # When using reverse proxy to terminate TLS, accept forwarded client cert header (use with caution)
    accept-forwarded-client-cert: ${DTS_PKI_ACCEPT_FORWARDED_CERT:false}
    client-cert-header-name: ${DTS_PKI_CLIENT_CERT_HEADER:X-Forwarded-Tls-Client-Cert}
    # Optional PKI issuer common name filter for additional validation
    issuer-cn: ${DTS_PKI_ISSUER_CN:}
    # For assertion mode: PKI verification API base and token
    api-base-url: ${DTS_PKI_API_BASE:}
    api-token: ${DTS_PKI_API_TOKEN:}
    api-timeout-ms: ${DTS_PKI_API_TIMEOUT:3000}
    # Dev-only: allow mock username during integration testing
    allow-mock: ${DTS_PKI_ALLOW_MOCK:false}
    # Gateway verification endpoint (for vendor SVS/统一安全中间件)
    gateway-host: ${DTS_PKI_GATEWAY_HOST:}
    gateway-port: ${DTS_PKI_GATEWAY_PORT:0}
    # Digest algorithm hint for PKCS#7 verify (SHA1|MD5|NONE). Default SHA1; adjust per vendor profile
    digest: ${DTS_PKI_DIGEST:SHA1}
    # Optional path to vendor client jar (e.g. svs-uk_custom.jar) for runtime loading
    vendor-jar-path: ${DTS_PKI_VENDOR_JAR:}

## Build and serve webapps using pnpm for production-like runs

services:

  dts-admin-webapp-build:
    image: node:20-alpine
    working_dir: /src
    environment:
      PNPM_STORE_DIR: /pnpm-store
    volumes:
      - ../dts-source/dts-admin-webapp:/src
      - ./.pnpm-store:/pnpm-store
      - ./builds/dts-admin-webapp:/out
    command: ["sh","-lc","set -e; corepack enable; if [ ! -f pnpm-lock.yaml ] && [ -f package-lock.json ]; then pnpm import; fi; pnpm install --no-frozen-lockfile --prefer-offline; pnpm run build; rm -rf /out/*; cp -a dist/* /out/ 2>/dev/null || cp -a build/* /out/ 2>/dev/null || (echo 'No dist/build output found' && exit 1)"]
    networks:
      - dts-core

  dts-admin-webapp:
    image: nginx:alpine
    depends_on:
      dts-admin-webapp-build:
        condition: service_completed_successfully
    volumes:
      - ./builds/dts-admin-webapp:/usr/share/nginx/html:ro
    ports:
      - "18011:80"
    networks:
      - dts-core

  dts-platform-webapp-build:
    image: node:20-alpine
    working_dir: /src
    environment:
      PNPM_STORE_DIR: /pnpm-store
    volumes:
      - ../dts-source/dts-platform-webapp:/src
      - ./.pnpm-store:/pnpm-store
      - ./builds/dts-platform-webapp:/out
    command: ["sh","-lc","set -e; corepack enable; if [ ! -f pnpm-lock.yaml ] && [ -f package-lock.json ]; then pnpm import; fi; pnpm install --no-frozen-lockfile --prefer-offline; pnpm run build; rm -rf /out/*; cp -a dist/* /out/ 2>/dev/null || cp -a build/* /out/ 2>/dev/null || (echo 'No dist/build output found' && exit 1)"]
    networks:
      - dts-core

  dts-platform-webapp:
    image: nginx:alpine
    depends_on:
      dts-platform-webapp-build:
        condition: service_completed_successfully
    volumes:
      - ./builds/dts-platform-webapp:/usr/share/nginx/html:ro
    ports:
      - "18012:80"
    networks:
      - dts-core

networks:
  dts-core:
    external: true

